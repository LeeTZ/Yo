type Int:{
    a: Int;
    func eval(a: Double) -> Int:{
        return;
}
    func eval(a: String) -> Int:{
        return;
}
    func eval(a:Int) -> Int:{
        return;
}
}
type String:{
    b: String;
    func eval(a: Int) -> String:{
        return;
}
    func eval(a: Double) -> String:{
        return;
}
    func eval(a: String) -> String:{
        return;
}
}
type Double:{
    c: Double;
    func eval(a: Int) -> Double:{
        return;
}
    func eval(a: String) -> Double:{
        return;
}
    func eval(a: Double) -> Double:{
        return;
}
}
type Bool:{
    func eval(a: Bool) -> Bool:{
        return;
}
}
type Void:{
    func eval(a: Void) -> Void:{
        return;
}
}
type Attribute:{
    second: Double;
    value: Double;
}
type Clip:{
    filename: String;
    starttime : Double;
    endtime : Double;
    position : Double;
    alpha : Attribute[];
    location_x : Attribute[];
    location_y : Attribute[];
    scale_x : Attribute[];
    scale_y : Attribute[];
    rotate : Attribute[];
    volume : Attribute[];
    clips:  Clip[];
}
type Frame:{
    width: Int;
    height: Int;
}

func Log(a: Int) -> Int:{
    return;
}

func Log(a: Double) -> Double: {
    return;
}

func Log(a: String) -> String: {
    return;
}
